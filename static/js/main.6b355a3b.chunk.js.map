{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","resources/img/abyss.jpg","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","objectFit","RandomChar","state","loading","error","marvelService","onCharLoading","setState","onCharLoaded","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","isDefault","CharList","charList","newItemsLoading","charEnded","onCharsLoaded","newCharList","ended","onRequest","onCharListLoading","itemRefs","setRef","ref","push","focusOnItem","focus","i","imgStyle","tabIndex","props","onCharSelected","onKeyPress","e","key","list","createCard","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","length","item","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b355a3b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=b64f7950cd45e9eea3b12ec75433ad45';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch url ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 220)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} alt=\"error\" style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}/>\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    updateChar = () => {\n/*         this.setState({\n            loading: true\n        }) */\n        this.onCharLoading();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={this.updateChar} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n/*     let imgClass = 'randomchar__img';\n\n    if (thumbnail == 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgClass += ' randomchar__default-img';\n    } */\n\n    const isDefault = thumbnail == 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={`randomchar__img ${isDefault ? 'randomchar__default-img' : ''}`}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\nimport abyss from '../../resources/img/abyss.jpg';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemsLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    onCharsLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }));\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n/*     updateCharacters (offset) {\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError);\n    } */\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharsLoaded)\n            .catch(this.onError);\n    }\n    \n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs[id].focus();\n    }\n\n    createCard (thumbnail, name, id, i) {\n        let imgStyle = {'objectFit': 'cover'};\n        if (thumbnail == 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit': 'unset'};\n        }\n        return (\n            <li className=\"char__item\"\n                tabIndex={0} \n                ref={this.setRef}\n                key={id} \n                onClick={() => {\n                    this.props.onCharSelected(id);\n                    this.focusOnItem(i);\n                }}\n                onKeyPress={(e) => {\n                    if (e.key === ' ' || e.key === 'Enter') {\n                        this.props.onCharSelected(id);\n                        this.focusOnItem(i);\n                    }\n                }}>\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div className=\"char__name\">{name}</div>\n            </li>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, newItemsLoading, offset, charEnded} = this.state;\n        const list = charList.map((char, i) => {\n            return (this.createCard(char.thumbnail, char.name, char.id, i));\n        });\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? list : null;\n\n        return (\n            <div className=\"char__list\">\n                    {errorMessage}\n                    {spinner}\n                <ul className=\"char__grid\">\n                    {content}\n                </ul>\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemsLoading}\n                    style={{'display' : charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit': 'cover'};\n    if (thumbnail == 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit': 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There are no comics with this character.'}\n                {\n                    comics.map((item, i) => {\n                        while (i < 10) {\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        }\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}